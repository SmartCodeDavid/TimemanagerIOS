//
//  ViewController.m
//  Assign2
//
//  Created by David Lan on 8/4/17.
//  Copyright Â© 2017 David Lan. All rights reserved.
//

#import "ViewController.h"
#import "UserInfo.h"
#import "AppDelegate.h"
#import "DateCell.h"
#import "NewTaskViewController.h"
#import "FMDatabase.h"
#import <sqlite3.h>

#define DATABASENAME @"userinfo.sqlite"

@interface ViewController ()

@end


@implementation ViewController

@synthesize timer                   = _timer;
@synthesize btn                     = _btn;
@synthesize circle                  = _circle;
@synthesize circleBackground        = _circleBackground;
@synthesize circleScore             = _circleScore;
@synthesize titleHome               = _titleHome;
@synthesize titleScore              = _titleScore;
@synthesize scoreValue              = _scoreValue;
@synthesize appDelegate             = _appDelegate;
@synthesize dataArray               = _dataArray;
@synthesize DateLabel;
@synthesize collectionView;
@synthesize timeLabel;
@synthesize eventLabel;

//set up the new task page.
- (IBAction)newEventPressDown:(id)sender {
    //grab instance from the storyboard with specific identifier.
    UIStoryboard* storyBoard = [UIStoryboard storyboardWithName:@"Main" bundle:[NSBundle mainBundle]];
    NewTaskViewController* ntvc = [storyBoard instantiateViewControllerWithIdentifier:@"newTaskViewController"];
    ntvc.view.backgroundColor = [UIColor colorWithRed:99/255.0 green:115/255.0 blue:194/255.0 alpha:1.0];
    ntvc.appDelegate = _appDelegate;
    [self presentViewController:ntvc animated:YES completion:nil];
}

- (void) buildCollection
{
    _dataArray = [[NSMutableArray alloc] init];
    //[_dataArray addObjectsFromArray:@[@"MO",@"TU",@"WE",@"TH",@"FR",@"SA",@"SU"]];
    NSInteger currentMonth = _appDelegate.currentMonthIndex + 1;
    NSInteger index = 0;
    
    if(currentMonth == 4 || currentMonth == 6
           || currentMonth == 9 || currentMonth == 11
       ) {                                  //30 days
        index = 30;
    }else if(currentMonth == 2) {           //28 days
        index = 28;
    }else {                                 //31 days
        index = 31;
    }
    
    //generate the date displayer
    for(NSInteger i = 1; i <= index; i++) {
        NSString *str = [NSString stringWithFormat:@"%d",(int)i];
        [_dataArray addObject:str];
    }
    
    DateLabel.text = _appDelegate.MonthArray[_appDelegate.currentMonthIndex];
    
}

- (NSInteger)numberOfSectionsInCollectionView:(UICollectionView *)collectionView
{
    return  1;
}

- (NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section
{
    return _dataArray.count;
}


- (void) labelTap:(UITapGestureRecognizer *)recognizer
{
    UILabel* label = (UILabel *)recognizer.view;
    
    if(!_appDelegate.currentHighlightLabel) {
        _appDelegate.currentHighlightLabel = label;
    }else {
        _appDelegate.currentHighlightLabel.backgroundColor = [UIColor clearColor];
    }
    
    label.backgroundColor = [UIColor colorWithRed:128/255.0 green:143/255.0 blue:163/255.0 alpha:1.0];
    
    _appDelegate.currentHighlightLabel = label;
    
    
    //display the time and relative event.
    
    //if currentHightlightlabel is equal to specific date
    if([_appDelegate.currentHighlightLabel.text isEqualToString:@"1"]) {
        //[_appDelegate.timeLabel setHidden:NO];
        [UIView animateWithDuration:1 animations:^{
            [_appDelegate.timeLabel setAlpha:1.f];
            [_appDelegate.eventLabel setAlpha:1.f];
            
        } completion:^(BOOL finished) {
            [_appDelegate.timeLabel setAlpha:1.0];
            [_appDelegate.eventLabel setAlpha:1.0];
        }];
    }else{
        [UIView animateWithDuration:1 animations:^{
            [_appDelegate.timeLabel setAlpha:0.f];
            [_appDelegate.eventLabel setAlpha:0.f];
         } completion:^(BOOL finished) {
             [_appDelegate.timeLabel setAlpha:0.f];
             [_appDelegate.eventLabel setAlpha:0.f];
         }];
    }
    
    NSLog(@"%@",label.text);
    
    
}

- (UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath
{
    
    
    DateCell * cell = [collectionView dequeueReusableCellWithReuseIdentifier:@"DateCell" forIndexPath:indexPath];
    
    cell.label.text = _dataArray[indexPath.row];
    cell.label.userInteractionEnabled = YES;
    
    [cell.label addGestureRecognizer:[[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(labelTap:)]];
    
    return cell;
}


- (CGSize)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout *)collectionViewLayout sizeForItemAtIndexPath:(NSIndexPath *)indexPath
{
    return  CGSizeMake(20, 20);
}

- (UIEdgeInsets)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout *)collectionViewLayout insetForSectionAtIndex:(NSInteger)section
{
    return UIEdgeInsetsMake(5, 5, 5, 5);
}

- (void) displayControls {
    //Title
    _titleHome = [[UILabel alloc] initWithFrame:CGRectMake(self.view.center.x-60.f, 30.f, 120.f, 60.f)];
    
    [_titleHome setText:@"TITLE"];
    [_titleHome setTextColor:[UIColor whiteColor]];
    _titleHome.font = [UIFont systemFontOfSize:45.f];
    _titleHome.textAlignment = NSTextAlignmentCenter;
    
    
    _btn = [[UIButton alloc] init];
    [_btn setFrame:CGRectMake(200, 100, 40, 50)];
    [_btn setTitle:@"hello" forState:UIControlStateNormal];
    [_btn setBackgroundColor:[UIColor redColor]];
    
    //setting the background for home page
    self.view.backgroundColor = [UIColor colorWithRed:99/255.0 green:115/255.0 blue:194/255.0 alpha:1.0];
    
    //score control
    _titleScore = [[UILabel alloc] initWithFrame:CGRectMake(self.view.center.x - 120, self.view.center.y - 80, 50, 30)];
    [_titleScore setTextColor:[UIColor whiteColor]];
    [_titleScore setText:@"Score"];
    
    //score Value
    _scoreValue = [[UILabel alloc] initWithFrame:CGRectMake(self.view.center.x - 122, self.view.center.y - 60, 50, 30)];
    [_scoreValue setTextColor:[UIColor whiteColor]];
    [_scoreValue setFont:[UIFont systemFontOfSize:28.f]];
    [_scoreValue setTextAlignment:NSTextAlignmentCenter];
    [_scoreValue setText:@"0"];
    
    
    //date
    _appDelegate.MonthArray = @[@"JAN",@"FEB",@"MAR",@"APRIL",@"MAY",@"JUN",@"JUL",@"AUG",@"SEP",@"OCT",@"NOV",@"DEC"];
    _appDelegate.currentMonthIndex = 11; //default month is APRIL
    [self buildCollection];
    
    //timelabel
    _appDelegate.timeLabel = timeLabel;
    _appDelegate.eventLabel = eventLabel;
    _appDelegate.eventLabel.backgroundColor = [UIColor colorWithRed:115/255.0 green:135/255.0 blue:153/255.0 alpha:1.0];
    _appDelegate.timeLabel.backgroundColor = [UIColor colorWithRed:115/255.0 green:135/255.0 blue:153/255.0 alpha:1.0];
    [_appDelegate.timeLabel setAlpha:0.f];
    [_appDelegate.eventLabel setAlpha:0.f];
    
    //three buttons at the bottom.
    
    
    
    
    
    //add those controls to the view
    [self.view addSubview:_titleHome];
    [self.view addSubview:_titleScore];
    [self.view addSubview:_scoreValue];
}

- (void) setCircle {
    
    //step1: setting the path to draw the circle
    _circle = [UIBezierPath bezierPathWithArcCenter:CGPointMake(-50, 0) radius:60.f startAngle:0.f endAngle:6.3f clockwise:YES];
    
    //step2: creating CASHAPELAYER which will generate the circle with the path above. --- background
    _circleBackground = [CAShapeLayer layer];
    [_circleBackground setFrame:CGRectMake(0, 0, 100, 100)];
    _circleBackground.fillColor = [[UIColor clearColor] CGColor];
    _circleBackground.lineWidth = 20.f;
    _circleBackground.position = self.view.center;
    _circleBackground.strokeColor = [[UIColor yellowColor] CGColor];
    _circleBackground.strokeStart = 0.f;
    _circleBackground.strokeEnd = 1.f;
    _circleBackground.path = _circle.CGPath;
    
    //step3: creating CASHAPELAYER which display the percentages on the circle --- score
    _circleScore = [CAShapeLayer layer];
    [_circleScore setFrame:CGRectMake(0, 0, 100, 100)];
    _circleScore.fillColor = [[UIColor clearColor] CGColor];
    _circleScore.lineWidth = 20.f;
    _circleScore.position = self.view.center;
    _circleScore.strokeColor = [[UIColor greenColor] CGColor];
    _circleScore.strokeStart = 0.f;
    _circleScore.strokeEnd = 0.f;
    _circleScore.path = _circle.CGPath;
    
    //step4: add those two circles to the view
    [self.view.layer addSublayer:_circleBackground] ;
    [self.view.layer addSublayer:_circleScore];
    
    //step5: show animation to the changes of percentage.
    _timer = [NSTimer scheduledTimerWithTimeInterval:0.05f target:self selector:@selector(animatedPercentage) userInfo:nil repeats:YES];
    
}


- (void) animatedPercentage {
    if (((float)_circleScore.strokeEnd == _appDelegate.userInfo.scoreVal / 100.f)) {
        [_timer invalidate];
    } else {
        _circleScore.strokeEnd += 0.01;
        NSString *val = [[NSString alloc] initWithFormat:@"%d", (int)(_circleScore.strokeEnd * 100)];
        [_scoreValue setText:val];
    }
}
- (IBAction)previousBtnPressDown:(id)sender {
    _appDelegate.currentHighlightLabel.backgroundColor = [UIColor clearColor];
    _appDelegate.currentHighlightLabel = nil;
    if(--_appDelegate.currentMonthIndex >= 0) {
        //change the date header
        DateLabel.text = _appDelegate.MonthArray[_appDelegate.currentMonthIndex];
    }else {
        _appDelegate.currentMonthIndex = 11;        //back to Dec
    }
    
    //reload the current days information
    [self buildCollection];
    [collectionView reloadData];
}

- (IBAction)forwardBtnPressDown:(id)sender {
    _appDelegate.currentHighlightLabel.backgroundColor = [UIColor clearColor];
    _appDelegate.currentHighlightLabel = nil;
    if(++_appDelegate.currentMonthIndex <= 11) {
        DateLabel.text = _appDelegate.MonthArray[_appDelegate.currentMonthIndex];
    }else{
        _appDelegate.currentMonthIndex = 0;         //back to JAN
    }
    
    //reload the current days
    [self buildCollection];
    [collectionView reloadData];
}


- (void)viewDidLoad {
    [super viewDidLoad];
    //set delegate
    if(! _appDelegate) {
        _appDelegate = [[UIApplication sharedApplication] delegate];
        _appDelegate.userInfo = [[UserInfo alloc] init];
        _appDelegate.userInfo.scoreVal = 43.f; //default score
        _appDelegate.urgencyArray = @[@"URGENT & IMPORTANT",@"NOT URGENT & IMPORTANT", @"URGENT & NOT IMPORTANT", @"NOT URGENT AND NOT IMPORTANT"];
    }
    
    //set database
    NSString *path = [NSHomeDirectory() stringByAppendingString:@"/Documents/db1.db"];
    
    _appDelegate.db = [FMDatabase databaseWithPath:path];
    
    if(_appDelegate.db != nil) {
        NSLog(@"database has been created");
        if([_appDelegate.db open]){
            NSLog(@"database has been opened");
            // name; descrip dueDate urgent; unitCode; weight;
            NSString *stringCreateTable = @"create table if not exists PersonInfo(id integer primary key autoincre, name varchar(20), descrip varchar(20), dueDate varchar(20), urgent varchar(30), unitCode varchar(20), weight integer)";
            if([_appDelegate.db executeUpdate:stringCreateTable]) {
                NSLog(@"table has been created");
            }
            
        }
    }
    

    
    [self displayControls];
    [self setCircle];
    
}


- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

@end
